apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: "false"
    app.openshift.io/vcs-ref: ""
    app.openshift.io/vcs-uri: https://github.com/sclorg/httpd-ex.git
    deployment.kubernetes.io/revision: "4"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"httpd:latest","namespace":"satest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"httpd\")].image","pause":"false"}]'
    openshift.io/generated-by: OpenShiftWebConsole
  creationTimestamp: "2023-08-28T12:53:52Z"
  generation: 4
  labels:
    app: httpd
    app.kubernetes.io/component: httpd
    app.kubernetes.io/instance: httpd
    app.kubernetes.io/name: httpd
    app.openshift.io/runtime: httpd
    app.openshift.io/runtime-version: 2.4-el7
  name: httpd
  namespace: satest
  resourceVersion: "96129"
  uid: 3f66527f-3f54-487a-8390-7787c6fc3059
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: httpd
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: httpd
        deployment: httpd
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/satest/httpd@sha256:bf6089eb2d1e9bf50d1117eac4142aa990eb6767d6c450a2e96ef6833cefa863
        imagePullPolicy: Always
        name: httpd
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8443
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: httpdsa2
      serviceAccountName: httpdsa2
      terminationGracePeriodSeconds: 30
